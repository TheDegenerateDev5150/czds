# refrence: https://github.com/golangci/golangci-lint/blob/master/.golangci.reference.yml
# doc: https://golangci-lint.run/usage/quick-start/
# ex: 
# * https://gist.github.com/brpaz/dc3635f52ccfed2eb5772c4cb484cab6
# * https://gist.github.com/maratori/47a4d00457a92aa426dbd48a18776322

run:
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 3m

linters:
  fast: false
  enable:
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - decorder
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - exportloopref
    - forcetypeassert
    - goconst
    - gocritic
    - gofmt
    - goheader
    - goimports
    - goprintffuncname
    - gosec
    - importas
    - interfacebloat
    - makezero
    - misspell
    - nakedret
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - nonamedreturns
    - prealloc
    - predeclared
    - reassign
    - revive
    - stylecheck
    - tenv
    - testpackage
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    - whitespace
    - testableexamples
    - staticcheck

    ## code complexity
    - funlen
    - cyclop
    - gocognit
    - gocyclo
    - maintidx
    - nestif

    #- godox # prints all TODOs (and more) leave disabled
    #- goerr113 # WIP
    - wrapcheck

    ## disabled for generics
    # https://github.com/golangci/golangci-lint/issues/2649
    #- rowserrcheck
    #- sqlclosecheck



linters-settings:
  errcheck:
    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
    # Such cases aren't reported by default.
    # Default: false
    check-type-assertions: true

  exhaustive:
    # Program elements to check for exhaustiveness.
    # Default: [ switch ]
    check:
      - switch
      - map
  
  gocritic:
    # Settings passed to gocritic.
    # The settings key is the name of a supported gocritic checker.
    # The list of supported checkers can be find in https://go-critic.github.io/overview.
    settings:
      captLocal:
        # Whether to restrict checker to params only.
        # Default: true
        paramsOnly: false
      underef:
        # Whether to skip (*x).method() calls where x is a pointer receiver.
        # Default: true
        skipRecvDeref: false

  govet:
    # Enable all analyzers.
    # Default: false
    enable-all: true
    # Disable analyzers by name.
    # Run `go tool vet help` to see all analyzers.
    # Default: []
    disable:
      - fieldalignment # way too strict
    # Settings per analyzer.
    settings:
      shadow:
        # Whether to be strict about shadowing; can be noisy.
        # Default: false
        strict: true

  funlen:
    # Checks the number of lines in a function.
    # If lower than 0, disable the check.
    # Default: 60
    lines: 150
    # Checks the number of statements in a function.
    # If lower than 0, disable the check.
    # Default: 40
    statements: 100

  cyclop:
    # The maximal code complexity to report.
    # Default: 10
    max-complexity: 30
    # The maximal average package complexity.
    # If it's higher than 0.0 (float) the check is enabled
    # Default: 0.0
    package-average: 10

  godox:
    # report any comments starting with keywords, this is useful for TODO or FIXME comments that
    # might be left in the code accidentally and should be resolved before merging
    keywords: # default keywords are TODO, BUG, and FIXME, these can be overwritten by this setting
      - TODO
      - BUG
      - FIXME
      - NOTE
      - OPTIMIZE # marks code that should be optimized before merging
      - HACK # marks hack-arounds that should be removed before merging

  nestif:
    # default 4
    min-complexity: 7

  staticcheck:
    # SAxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: [ "all" ]
  
  wrapcheck:
    ignorePackageGlobs:
      - zonetools/util/errors
      - encoding/*

  revive:
    # https://github.com/mgechev/revive
    # Maximum number of open files at the same time.
    # See https://github.com/mgechev/revive#command-line-flags
    # Defaults to unlimited.
    #max-open-files: 2048

    # When set to false, ignores files with "GENERATED" header, similar to golint.
    # See https://github.com/mgechev/revive#available-rules for details.
    # Default: false
    ignore-generated-header: true

    # Sets the default severity.
    # See https://github.com/mgechev/revive#configuration
    # Default: warning
    #severity: error

  
    # Enable all available rules.
    # Default: false
    # enable-all-rules: true

    # some rules require a config
    # provide minimcal base config here to allow revive to work
    rules:
      - name: context-keys-type
      - name: time-equal
      - name: time-naming
      - name: var-declaration
      - name: unexported-return
      - name: errorf
      - name: blank-imports
      - name: context-as-argument
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: indent-error-flow
      - name: empty-block
      - name: superfluous-else
      - name: confusing-naming
      - name: get-return
      - name: modifies-parameter
      - name: confusing-results
      - name: deep-exit
      - name: unused-parameter
      - name: unreachable-code
      - name: flag-parameter
      - name: unnecessary-stmt
      - name: struct-tag
      - name: modifies-value-receiver
      - name: constant-logical-expr
      - name: bool-literal-in-expr
      - name: redefines-builtin-id
      - name: range-val-in-closure
      - name: range-val-address
      - name: waitgroup-by-value
      - name: atomic
      - name: call-to-gc
      - name: duplicated-imports
      - name: import-shadowing
      - name: bare-return
      - name: unused-receiver
      - name: string-of-int
      - name: early-return
      - name: unconditional-recursion
      - name: identical-branches
      - name: unexported-naming
      - name: nested-structs
      - name: useless-break	
      - name: optimize-operands-order
      - name: use-any
      - name: datarace
      # - name: max-public-structs
      #   disabled: true
      # - name: argument-limit
      #   disabled: true
      # - name: function-result-limit
      #   disabled: true
      # - name: cyclomatic
      #   disabled: true
      # - name: file-header
      #   disabled: true
      # - name: banned-characters
      #   disalbed: true
      # - name: function-length
      #   disabled: true
      # - name: cognitive-complexity
      #   disabled: true
      # - name: line-length-limit
      #   disabled: true

    # Sets the default failure confidence.
    # This means that linting errors with less than 0.8 confidence will be ignored.
    # Default: 0.8
    #confidence: 0.1


issues:
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 50

  exclude-rules:
    - path: "importer/undo/undo_import.go"
      linters: [ dupl ]
